// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// dgumbel_jh
double dgumbel_jh(double x, double mu, double sigma);
RcppExport SEXP _virosolver_dgumbel_jh(SEXP xSEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(dgumbel_jh(x, mu, sigma));
    return rcpp_result_gen;
END_RCPP
}
// pgumbel_scale
double pgumbel_scale(double x, double mu, double sigma);
RcppExport SEXP _virosolver_pgumbel_scale(SEXP xSEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(pgumbel_scale(x, mu, sigma));
    return rcpp_result_gen;
END_RCPP
}
// pgumbel_jh
double pgumbel_jh(double x, double mu, double sigma);
RcppExport SEXP _virosolver_pgumbel_jh(SEXP xSEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(pgumbel_jh(x, mu, sigma));
    return rcpp_result_gen;
END_RCPP
}
// prop_detectable_cpp
double prop_detectable_cpp(double a, double viral_load, double obs_sd, double lod, double t_switch, double prob_detect);
RcppExport SEXP _virosolver_prop_detectable_cpp(SEXP aSEXP, SEXP viral_loadSEXP, SEXP obs_sdSEXP, SEXP lodSEXP, SEXP t_switchSEXP, SEXP prob_detectSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type viral_load(viral_loadSEXP);
    Rcpp::traits::input_parameter< double >::type obs_sd(obs_sdSEXP);
    Rcpp::traits::input_parameter< double >::type lod(lodSEXP);
    Rcpp::traits::input_parameter< double >::type t_switch(t_switchSEXP);
    Rcpp::traits::input_parameter< double >::type prob_detect(prob_detectSEXP);
    rcpp_result_gen = Rcpp::wrap(prop_detectable_cpp(a, viral_load, obs_sd, lod, t_switch, prob_detect));
    return rcpp_result_gen;
END_RCPP
}
// likelihood_cpp
NumericVector likelihood_cpp(NumericVector obs, double obs_time, NumericVector ages, NumericVector pars, NumericVector prob_infection, NumericVector sd_mod_vec);
RcppExport SEXP _virosolver_likelihood_cpp(SEXP obsSEXP, SEXP obs_timeSEXP, SEXP agesSEXP, SEXP parsSEXP, SEXP prob_infectionSEXP, SEXP sd_mod_vecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type obs(obsSEXP);
    Rcpp::traits::input_parameter< double >::type obs_time(obs_timeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ages(agesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type prob_infection(prob_infectionSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sd_mod_vec(sd_mod_vecSEXP);
    rcpp_result_gen = Rcpp::wrap(likelihood_cpp(obs, obs_time, ages, pars, prob_infection, sd_mod_vec));
    return rcpp_result_gen;
END_RCPP
}
// likelihood_pos_only_cpp
NumericVector likelihood_pos_only_cpp(NumericVector obs, double obs_time, NumericVector ages, NumericVector pars, NumericVector prob_infection, NumericVector sd_mod_vec);
RcppExport SEXP _virosolver_likelihood_pos_only_cpp(SEXP obsSEXP, SEXP obs_timeSEXP, SEXP agesSEXP, SEXP parsSEXP, SEXP prob_infectionSEXP, SEXP sd_mod_vecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type obs(obsSEXP);
    Rcpp::traits::input_parameter< double >::type obs_time(obs_timeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ages(agesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type prob_infection(prob_infectionSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sd_mod_vec(sd_mod_vecSEXP);
    rcpp_result_gen = Rcpp::wrap(likelihood_pos_only_cpp(obs, obs_time, ages, pars, prob_infection, sd_mod_vec));
    return rcpp_result_gen;
END_RCPP
}
// pred_dist_cpp
NumericVector pred_dist_cpp(NumericVector test_cts, NumericVector ages, double obs_time, NumericVector pars, NumericVector prob_infection, NumericVector sd_mod_vec);
RcppExport SEXP _virosolver_pred_dist_cpp(SEXP test_ctsSEXP, SEXP agesSEXP, SEXP obs_timeSEXP, SEXP parsSEXP, SEXP prob_infectionSEXP, SEXP sd_mod_vecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type test_cts(test_ctsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ages(agesSEXP);
    Rcpp::traits::input_parameter< double >::type obs_time(obs_timeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type prob_infection(prob_infectionSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sd_mod_vec(sd_mod_vecSEXP);
    rcpp_result_gen = Rcpp::wrap(pred_dist_cpp(test_cts, ages, obs_time, pars, prob_infection, sd_mod_vec));
    return rcpp_result_gen;
END_RCPP
}
// pred_dist_cpp_symptoms
NumericVector pred_dist_cpp_symptoms(NumericVector test_cts, int max_incu_period, int max_sampling_delay, double obs_time, NumericVector pars, NumericVector prob_infection, NumericVector sd_mod_vec);
RcppExport SEXP _virosolver_pred_dist_cpp_symptoms(SEXP test_ctsSEXP, SEXP max_incu_periodSEXP, SEXP max_sampling_delaySEXP, SEXP obs_timeSEXP, SEXP parsSEXP, SEXP prob_infectionSEXP, SEXP sd_mod_vecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type test_cts(test_ctsSEXP);
    Rcpp::traits::input_parameter< int >::type max_incu_period(max_incu_periodSEXP);
    Rcpp::traits::input_parameter< int >::type max_sampling_delay(max_sampling_delaySEXP);
    Rcpp::traits::input_parameter< double >::type obs_time(obs_timeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type prob_infection(prob_infectionSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sd_mod_vec(sd_mod_vecSEXP);
    rcpp_result_gen = Rcpp::wrap(pred_dist_cpp_symptoms(test_cts, max_incu_period, max_sampling_delay, obs_time, pars, prob_infection, sd_mod_vec));
    return rcpp_result_gen;
END_RCPP
}
// pred_age_since_inf_symptomatic
NumericVector pred_age_since_inf_symptomatic(int max_incu_period, int max_sampling_delay, double obs_time, NumericVector pars, NumericVector prob_infection, NumericVector sd_mod_vec);
RcppExport SEXP _virosolver_pred_age_since_inf_symptomatic(SEXP max_incu_periodSEXP, SEXP max_sampling_delaySEXP, SEXP obs_timeSEXP, SEXP parsSEXP, SEXP prob_infectionSEXP, SEXP sd_mod_vecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type max_incu_period(max_incu_periodSEXP);
    Rcpp::traits::input_parameter< int >::type max_sampling_delay(max_sampling_delaySEXP);
    Rcpp::traits::input_parameter< double >::type obs_time(obs_timeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type prob_infection(prob_infectionSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sd_mod_vec(sd_mod_vecSEXP);
    rcpp_result_gen = Rcpp::wrap(pred_age_since_inf_symptomatic(max_incu_period, max_sampling_delay, obs_time, pars, prob_infection, sd_mod_vec));
    return rcpp_result_gen;
END_RCPP
}
// viral_load_func_single_cpp
double viral_load_func_single_cpp(double tshift, double desired_mode, double t_switch, double viral_peak, double obs_sd, double level_switch, double true_0, double yintercept, double lod, double wane_rate, double wane_rate2, double growth_rate, double obs_t, bool convert_vl);
RcppExport SEXP _virosolver_viral_load_func_single_cpp(SEXP tshiftSEXP, SEXP desired_modeSEXP, SEXP t_switchSEXP, SEXP viral_peakSEXP, SEXP obs_sdSEXP, SEXP level_switchSEXP, SEXP true_0SEXP, SEXP yinterceptSEXP, SEXP lodSEXP, SEXP wane_rateSEXP, SEXP wane_rate2SEXP, SEXP growth_rateSEXP, SEXP obs_tSEXP, SEXP convert_vlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type tshift(tshiftSEXP);
    Rcpp::traits::input_parameter< double >::type desired_mode(desired_modeSEXP);
    Rcpp::traits::input_parameter< double >::type t_switch(t_switchSEXP);
    Rcpp::traits::input_parameter< double >::type viral_peak(viral_peakSEXP);
    Rcpp::traits::input_parameter< double >::type obs_sd(obs_sdSEXP);
    Rcpp::traits::input_parameter< double >::type level_switch(level_switchSEXP);
    Rcpp::traits::input_parameter< double >::type true_0(true_0SEXP);
    Rcpp::traits::input_parameter< double >::type yintercept(yinterceptSEXP);
    Rcpp::traits::input_parameter< double >::type lod(lodSEXP);
    Rcpp::traits::input_parameter< double >::type wane_rate(wane_rateSEXP);
    Rcpp::traits::input_parameter< double >::type wane_rate2(wane_rate2SEXP);
    Rcpp::traits::input_parameter< double >::type growth_rate(growth_rateSEXP);
    Rcpp::traits::input_parameter< double >::type obs_t(obs_tSEXP);
    Rcpp::traits::input_parameter< bool >::type convert_vl(convert_vlSEXP);
    rcpp_result_gen = Rcpp::wrap(viral_load_func_single_cpp(tshift, desired_mode, t_switch, viral_peak, obs_sd, level_switch, true_0, yintercept, lod, wane_rate, wane_rate2, growth_rate, obs_t, convert_vl));
    return rcpp_result_gen;
END_RCPP
}
